%input
sigma=0.042/2;                                                             % solidaty ratio0.042 0.027
seta_o_up=8*(pi/180)
H=0.6
delta_seta =4*(pi/180)
omga= 130
C_root = 0.062                                                             % 0.062 0.294
taper_ratio = 0.637                                                        % 0.637 0.388 
R= 0.762 %3.81;                                                            %rotor redius
Nb =2
R_cut_factor = 0.167                                                       % 0.167 0.13
seta_twist=0*(pi/180);                                                     %twist angle
roh = 1.225
Mioh = 0.0000181206

                        
                                      %%%%parameter%%%%%

Cl_alpha=2*pi;                                                             % airfoil coefficient of lift slope
seta_o_down=seta_o_up+delta_seta;                                          %pitch angle downstream rotor
R_cut=R_cut_factor*R;                                                      %rotor cut off
N =400                                                                     %descritization elements
NN=20
b = R-R_cut                                                                %blade span
delta_r =(b/N)                               
taper_slope = ((C_root*taper_ratio)-C_root)/b

B_loss=(1-((C_root*(1+(0.7*taper_ratio)))/(1.5*R)))

K =1.15


if H < 0.35
K_int_upstream =1
else
    K_int_upstream =1
end
k_br =0.5


                                   %%%%%%%upstream rotor %%%%%%%
 for i=1:N
     r_up(i)=((delta_r*i))/b;
     seta_up(i)= seta_o_up+ r_up(i)*seta_twist;
     c_up(i)=(C_root)+(taper_slope*r_up(i)*b)
     Re_up_T(i) = (roh*(omga* (((r_up(i))*b)+R_cut))*c_up(i))/Mioh

                                        %%Lift slope%%
     if seta_up(i) <= 2*(pi/180)
         if Re_up_T(i) < 70000
             Cl_alpha_up(i)= ((0.2325/70000)* Re_up_T(i))*180/pi
         else Cl_alpha_up(i)=((0.21+(20000*0.7/Re_up_T(i)))/2)*180/pi
         end

     elseif  2*(pi/180)< seta_up(i) <= 4*(pi/180)
         if Re_up_T(i) < 70000
             Cl_alpha_up(i)= ((0.152/70000)* Re_up_T(i))*180/pi
         elseif 70000 <= Re_up_T(i) <= 150000 
             Cl_alpha_up(i)=0.152*180/pi
         else Cl_alpha_up(i)=((0.21+(20000*0.7/Re_up_T(i)))/2)*180/pi
         end
         
     else Cl_alpha_up(i)= Cl_alpha

     end  

                    %%upstream rotor performance parameter

     Lamda_up(i)=((Cl_alpha_up(i)*sigma)/16)*((sqrt (1+((32*seta_up(i)*r_up(i))/(Cl_alpha_up(i)*sigma))))-1);
     B_up(i) = 1-(Lamda_up(i)*sqrt(2))
     delta_Ct_up(i)=((Cl_alpha_up(i)*sigma)/2)*((seta_up(i)*(r_up(i)*B_up(i))^2)-(Lamda_up(i)*r_up(i)/B_up(i)))*(delta_r/b) ;
     Cl_up(i)=Cl_alpha_up(i)*(seta_up(i)-(Lamda_up(i)/r_up(i)));
     V_up(i)= sqrt (((omga* (((r_up(i))*b)+R_cut))^2)+((Lamda_up(i)*omga* (((r_up(i))*b)+R_cut))^2))
     Re_up(i)= (roh*V_up(i)*c_up(i))/Mioh
     Cd_0_up(i)=2/((Re_up(i)*0.75/1000)+35)
     
     cdup_1_o (i) =(Lamda_up(i)/(r_up(i)))*pi/180
     cdup_2_o (i) =(seta_up(i)-cdup_1_o (i))
     Cd_o_up(i) = (Cd_0_up(i)+(0.02*cdup_2_o (i))+(0.4*(cdup_2_o (i))^2))*(delta_r/b);
     CQ_o_up(i)=(sigma/8)*Cd_o_up(i)
     seta_o_up = seta_up(i);
 end
 total_delta_Ct_up =(sum (delta_Ct_up))
 Ct_up=total_delta_Ct_up*Nb
 CT_up= Ct_up
 delta_CQ_i_up=delta_Ct_up.*Lamda_up
 CQ_i_up = sum (delta_CQ_i_up)
 total_CQ_o_up= sum (CQ_o_up)
 cQ_up=(CQ_i_up*Nb*(K)*K_int_upstream)+(total_CQ_o_up*Nb)

 CT_up_old = CT_up
               %%%Single Rotor tip vortex radial displacement%%%

K_1_tip_s = 0.25*((CT_up/(sigma*2))+(0.001*seta_twist))
Zeta_passage_s = 2*pi/Nb
Z_Tip_passage_s = K_1_tip_s*Zeta_passage_s
K_2_tip_s = (1+(0.01*seta_twist)) * sqrt(Ct_up)
A_tip_s = 0.145+(27*CT_up)
if Z_Tip_passage_s > H
    Zeta_age_s= (H/K_1_tip_s)*180/pi   
else 
    Zeta_age_s= (((H-Z_Tip_passage_s)/K_2_tip_s)+(Zeta_passage_s))*180/pi    
end

%Venna Region info region when radial displacement almost equal sqrt(2)

Zeta_age_vena_s = (180/pi)*-log((0.71-0.702)/(1-0.702))/(A_tip_s)
Y_tip_venna_s= 0.702+(1-0.702)*exp(-A_tip_s*(Zeta_age_vena_s*pi/180))
z_venna_s = Z_Tip_passage_s + K_2_tip_s*((Zeta_age_vena_s*pi/180)-Zeta_passage_s)

%Ytip for Single Rotot (convergance divargance where the throat at venna region) 

if Zeta_age_s< Zeta_age_vena_s
    Y_tip_s= 0.702+(1-0.702)*exp(-A_tip_s*(Zeta_age_s*pi/180))
else
    Y_tip_c_s= Y_tip_venna_s +((0.2^(1/A_tip_s))*exp(A_tip_s*(Zeta_age_s*pi/180)))
    if Y_tip_c_s<1
        Y_tip_s=Y_tip_c_s
    else
        Y_tip_s=1
    end
end
         %%% Velocity Profile for single rotor at plane downstream = H %%%
v_ind_up_s=(Lamda_up(N))*omga*R
Tip_Thrust_r_s= sqrt(CT_up/2)/(Lamda_up(N))
v_center_s= v_ind_up_s*((1-Y_tip_s)/Y_tip_s)*13/3
Lamda_Center_s= v_center_s/(omga*R)

% Intial Value for Co-axial Calculation

Y_tip_old=  Y_tip_s
Lamda_D_old = Lamda_up(N)
v_center_old= v_center_s
V_D_old= Lamda_D_old*(omga*R)
V_D_old_c= V_D_old


 
                             %%%%%%%%%%% Downstream rotor %%%%%%%%%%%

for k=1:NN

    CT_up(k)=CT_up_old
    Lamda_D=Lamda_D_old
    V_D= Lamda_D*(omga*R)
                          %%%Co-axial Rotor tip vortex radial displacement%%%
    K_1_tip = 0.25*((sqrt(CT_up(k)^2)/(sigma*2))+(0.001*seta_twist))
    Zeta_passage = 2*pi/Nb
    Z_Tip_passage = K_1_tip*Zeta_passage
    K_2_tip = (1+(0.01*seta_twist)) * sqrt(sqrt(CT_up(k)^2))
    A_tip = 0.145+(27*sqrt(CT_up(k)^2))

if Z_Tip_passage > H
   Zeta_age= (H/K_1_tip)*180/pi
else 
   Zeta_age= (((H-Z_Tip_passage)/K_2_tip)+(Zeta_passage))*180/pi
end

%Venna Region for Co-axial info region when radial displacement almost equal sqrt(2)

Zeta_age_vena = (180/pi)*-log((0.71-0.702)/(1-0.702))/(A_tip)
Y_tip_venna= 0.702+(1-0.702)*exp(-A_tip*(Zeta_age_vena*pi/180))
z_venna = Z_Tip_passage + K_2_tip*((Zeta_age_vena*pi/180)-Zeta_passage)

%Correction Term represent the decrease in area due to the downstream rotor

Lmada_induced_Tip_c= sqrt(sqrt(Ct_up^2)/2)/Tip_Thrust_r_s 
v_ind_up_c=(Lmada_induced_Tip_c)*omga*R 
V_2 = (1+(V_D_old_c/(v_ind_up_c+v_center_s)))^(1/3)
%V_1=round(V_2,1)
V_1=1
%Ytip for Co-axial Rotot (convergance divargance where the throat at venna region) 

if Zeta_age< Zeta_age_vena
   Y_tip = (0.702+(1-0.702)*exp(-A_tip*(Zeta_age*pi/180)))/V_1
else
    Y_tip_c = (Y_tip_venna +((0.2^(1/A_tip))*exp(A_tip*(Zeta_age*pi/180))))/V_1
    if Y_tip_c<1
       Y_tip =Y_tip_c
    else
        Y_tip =1
    end
end
%Y_tip=Y_tip_s
%Elements Inside the Slip Stream Region
x  =(b-(1-Y_tip)*R)/b
X = round(x*N)
y =X/N

%Velocity Profile at the downstream rotor plane

Lmada_induced_Tip = sqrt(sqrt(CT_up(k)^2)/2)/Tip_Thrust_r_s 
v_ind_up =(Lmada_induced_Tip)*omga*R                                        
if Y_tip < 1
v_center = v_ind_up*((1-Y_tip)/Y_tip)*13/3
v_root = v_center+((v_ind_up-v_center)*R_cut_factor/Y_tip)
Lamda_Center = v_center/(omga/R)

%Interferance Factor 1.41 when H=0 and 1.16 at venna 
K_int_downstream_slope = (0.99-0.72)/(1.41-1.16)
K_int_downstream  =(1.41-(K_int_downstream_slope*0.99))+(K_int_downstream_slope*Y_tip)

                                      %%% Inner Part %%%
for  i=1:y*N
     r_down_in(i)=((delta_r*i))/b;
     seta_down_in(i)= seta_o_down+ r_down_in(i)*seta_twist;
     v_c_in(i) = (v_root)+((v_ind_up-v_root)*r_down_in(i)/(y))
     lamda_climb_in(i)=v_c_in(i)/(omga*R);
     c_down_in(i) =(C_root)+(taper_slope*r_down_in(i)*b)

    %Lift Slope Condition
                         
     V_down_in_L(i) =sqrt (((omga* (((r_down_in(i))*b)+R_cut))^2)+((v_c_in(i))^2))
     Re_down_in_L(i) = (roh*V_down_in_L(i)*c_down_in(i))/Mioh
    if seta_down_in(i) <= 2*(pi/180)
         if Re_down_in_L(i) < 70000
              Cl_alpha_down_in(i) = ((0.2325/70000)* Re_down_in_L(i))*180/pi
         else  Cl_alpha_down_in(i) =((0.21+(20000*0.7/Re_down_in_L(i)))/2)*180/pi
         end

     elseif  2*(pi/180) < seta_down_in(i) <= 4*(pi/180)
         if Re_down_in_L(i) < 70000
              Cl_alpha_down_in(i)= ((0.152/70000)* Re_down_in_L(i))*180/pi
         elseif 70000 <= Re_down_in_L(i) <= 150000 
             Cl_alpha_down_in(i)=0.152*180/pi
         else Cl_alpha_down_in(i)=((0.21+(20000*0.7/Re_down_in_L(i)))/2)*180/pi
         end
         
     else Cl_alpha_down_in(i)= Cl_alpha

     end  
    
    Lamda_down_in(i)=sqrt ((((sigma*Cl_alpha_down_in(i))/16)-(lamda_climb_in(i)/2))^2+(sigma*Cl_alpha_down_in(i)*seta_down_in(i)*r_down_in(i)/8))-((sigma*Cl_alpha_down_in(i)/16)-(lamda_climb_in(i)/2)); 
    B_down_in(i) = 1-(Lamda_down_in(i)*sqrt(2))
    delta_Ct_down_in(i)=((Cl_alpha_down_in(i)*sigma)/2)*((seta_down_in(i)*(r_down_in(i)*B_down_in(i))^2)-((Lamda_down_in(i))*r_down_in(i)/B_down_in(i)))*(delta_r/b);
    Lamda_D(i)=((Cl_alpha_down_in(i)*sigma)/16)*((sqrt (1+((32*seta_down_in(i)*r_down_in(i))/(Cl_alpha_down_in(i)*sigma))))-1);
    Cl_down_in(i)=Cl_alpha_down_in(i)*(seta_down_in(i)-( Lamda_down_in(i)/r_down_in(i))); 
    V_down_in(i)=sqrt (((omga* (((r_down_in(i))*b)+R_cut))^2)+((Lamda_down_in(i)*omga* (((r_down_in(i))*b)+R_cut)))^2)
    Re_down_in(i)= (roh*V_down_in(i)*c_down_in(i))/Mioh
    Cd_0_down_in(i)=2/((Re_down_in(i)*0.75/1000)+35)
    cd_downin_1_o(i) = (pi/180)*(Lamda_down_in(i))/r_down_in(i)
    cd_downin_2_o(i) = seta_down_in(i)-cd_downin_1_o(i)
    Cd_o_down_in(i) = (Cd_0_down_in(i)+(0.02*cd_downin_2_o(i))+(0.4*cd_downin_2_o(i)^2))*(delta_r/b);
    CQ_o_down_in(i)=(k_br*sigma/4)*Cd_o_down_in(i)
    seta_o_down=seta_down_in(i);
end
                                           %%% Outer Part %%%


for j= ((y*N):N)
    r_down_out(j)=((delta_r*j))/b;
    seta_down_out(j)= seta_o_down+ r_down_out(j)*seta_twist;
    v_c_out(j)= v_root+((v_ind_up-v_root)*(r_down_out(j))/((y)))
    lamda_climb_out(j)=v_c_out(j)/(omga*R);
    c_down_out(j) =(C_root)+(taper_slope*r_down_out(j)*b)
                              
                           %%%lift slope condition
                         
    V_down_out_L(j)=sqrt (((omga* (((r_down_out(j))*b)+R_cut))^2)+(v_c_out(j))^2)
    Re_down_out_L(j)= (roh*V_down_out_L(j)*c_down_out(j))/Mioh
    if seta_down_out(j) <= 2*(pi/180)
         if Re_down_out_L(j) < 70000
             Cl_alpha_down_out(j)= ((0.2325/70000)* Re_down_out_L(j))*180/pi
         else Cl_alpha_down_out(j)=((0.21+(20000*0.7/Re_down_out_L(j)))/2)*180/pi
         end

     elseif  2*(pi/180)< seta_down_out(j) <= 4*(pi/180)
         if Re_down_out_L(j) < 70000
             Cl_alpha_down_out(j)= ((0.152/70000)* Re_down_out_L(j))*180/pi
         elseif 70000 <= Re_down_out_L(j) <= 150000 
             Cl_alpha_down_out(j)=0.152*180/pi
         else Cl_alpha_down_out(j)=((0.21+(20000*0.7/Re_down_out_L(j)))/2)*180/pi
         end
         
     else Cl_alpha_down_out(j)= Cl_alpha

     end  

    Lamda_down_out(j)=sqrt ((((sigma*Cl_alpha_down_out(j))/16)-(lamda_climb_out(j)/2))^2+(sigma*Cl_alpha_down_out(j)*seta_down_out(j)*r_down_out(j)/8))-((sigma*Cl_alpha_down_out(j)/16)-(lamda_climb_out(j)/2)); 
    %Lamda_down_out(i)=((Cl_alpha_down_out(i)*sigma)/16)*((sqrt (1+((32*seta_down_out(i)*r_down_out(i))/(Cl_alpha_down_out(i)*sigma))))-1);
    B_down_out(j)=1-(Lamda_down_out(j)*sqrt(2))
    delta_Ct_down_out(j)=((Cl_alpha_down_out(j)*sigma)/2)*((seta_down_out(j)*(r_down_out(j)*B_down_out(j))^2)-(Lamda_down_out(j)*r_down_out(j)/B_down_out(j)))*(delta_r/b); 
    Cl_down_out(j)=Cl_alpha_down_out(j)*(seta_down_out(j)-(Lamda_down_out(j)/r_down_out(j)));
    V_down_out(j)=sqrt (((omga* (((r_down_out(j))*b)+R_cut))^2)+((Lamda_down_out(j)*omga* (((r_down_out(j))*b)+R_cut)))^2)
    Re_down_out(j)= (roh*V_down_out(j)*c_down_out(j))/Mioh
    Cd_0_down_out(j)=2/((Re_down_out(j)*0.75/1000)+35)
    cd_downout_1_o(j) = (Lamda_down_out(j)/r_down_out(j))*pi/180
    cd_downout_2_o(j)= seta_down_out(j)-cd_downout_1_o(j)
    Cd_o_down_out(j) = (Cd_0_down_out(j)+(0.02*cd_downout_2_o(j))+(0.4*(cd_downout_2_o(j))^2))*(delta_r/b)
    CQ_o_down_out(j)=(k_br*sigma/4)*Cd_o_down_out(j)
    seta_o_down=seta_down_out(j);
 end
total_delta_Ct_down_in= sum (delta_Ct_down_in)
total_delta_Ct_down_out=sum (delta_Ct_down_out)
Ct_down =(total_delta_Ct_down_in+total_delta_Ct_down_out)*Nb
CT_down= Ct_down/K_int_downstream
delta_CQ_i_down_in= (delta_Ct_down_in.*Lamda_down_in)
CQ_i_down_in= sum (delta_CQ_i_down_in)
delta_CQ_i_down_out = (delta_Ct_down_out.*Lamda_down_out)
CQ_i_down_out= sum (delta_CQ_i_down_out)
total_CQ_o_down_in= sum (CQ_o_down_in)
total_CQ_o_down_out= sum (CQ_o_down_out)
cQ_down =((CQ_i_down_in+CQ_i_down_out)*Nb*(K)*K_int_downstream)+((total_CQ_o_down_in+total_CQ_o_down_out)*Nb)
                                 
                                    %%% upstream Thrust correction%%%
 Lamda_2= (sum (Lamda_down_in))*(delta_r/b)
 Lamda_D_tip=Lamda_D(y*N)
 Y_Tip_relation = ((13-(10*Y_tip))/(3*Y_tip))^2
 Ct_downt_relation= (((2/Y_tip)*Lamda_2)-Lamda_D_tip)^2
 CT_up_new(k)=(4*(Tip_Thrust_r_s^2) *Ct_downt_relation/Y_Tip_relation)


elseif Y_tip_s == 1 & H < z_venna 

  v_center= v_ind_up*((1/(Y_tip)^3)-1)
  v_root= v_center+((v_ind_up-v_center)*R_cut_factor/Y_tip)
  K_int_downstream = 1.41
  


  for i=1:N
    r_down(i)=((delta_r*i))/b;
    seta_down(i)= seta_o_down+  r_down(i)*seta_twist;
    v_c(i)= v_root+((v_ind_up-v_root)*r_down(i))
    lamda_climb(i)=v_c(i)/(omga*R);
    c_down(i)=(C_root)+(taper_slope*r_down(i)*R)

                                        %%Lift slope%%
    V_down_L(i)=sqrt ((omga* (((r_down(i))*b)+R_cut))^2+(v_c(i))^2)
    Re_down_L(i)= (roh*V_down_L(i)*c_down(i))/Mioh                                    
    
     if seta_down(i) <= 2*(pi/180)
         if Re_down_T(i) < 70000
             Cl_alpha_down(i)= ((0.2325/70000)* Re_down_T(i))*180/pi
         else Cl_alpha_down(i)=((0.21+(20000*0.7/Re_down_T(i)))/2)*180/pi
         end

     elseif  2*(pi/180)< seta_down(i) <= 4*(pi/180)
         if Re_down_L(i) < 70000
             Cl_alpha_down(i)= ((0.152/70000)* Re_down_L(i))*180/pi
         elseif 70000 <= Re_down_L(i) <= 150000 
             Cl_alpha_down(i)=0.152*180/pi
         else Cl_alpha_down(i)=((0.21+(20000*0.7/Re_down_L(i)))/2)*180/pi
         end
         
     else Cl_alpha_down(i)= Cl_alpha

     end  

    Lamda_down(i)=sqrt ((((sigma*Cl_alpha_down(i))/16)-(lamda_climb(i)/2))^2+(sigma*Cl_alpha_down(i)*seta_down(i)*r_down(i)/8))-((sigma*Cl_alpha_down(i)/16)-(lamda_climb(i)/2)); 
    B_down(i)= 1-(Lamda_down(i)*sqrt(2)/Nb)
    delta_Ct_down(i)=((Cl_alpha_down(i)*sigma)/2)*((seta_down(i)*(r_down(i)*B_down(i))^2)-((Lamda_down(i))*r_down(i)/B_down(i)))*(delta_r/b)
    Lamda_D(i)=((Cl_alpha_down(i)*sigma)/16)*((sqrt (1+((32*seta_down(i)*r_down(i))/(Cl_alpha_down(i)*sigma))))-1);
    Cl_down(i)=Cl_alpha_down(i)*(seta_down(i)-( Lamda_down(i)/r_down(i)));
    V_down(i)=sqrt (((omga* (((r_down(i))*b)+R_cut))^2)+((Lamda_down(i)*omga* (((r_down(i))*b)+R_cut)))^2)
    Re_down(i)= (roh*V_down(i)*c_down(i))/Mioh
    Cd_0_down(i)=2/((Re_down(i)*0.75/1000)+35)
    cd_down_1_o(i) = (pi/180)*(Lamda_down(i))/r_down(i)
    cd_down_2_o(i) = seta_down_in(i)-cd_down_1_o(i)
    Cd_o_down_(i) = (Cd_0_down_(i)+(0.02*cd_down_2_o(i))+(0.4*cd_down_2_o(i)^2))*(delta_r/b);
    CQ_o_down(i)=(k_br*sigma/4)*Cd_o_down(i)
    seta_o_down=seta_down(i);
  end
 total_Ct_down =(sum (delta_Ct_down))
 Ct_down=total_Ct_down*Nb
 B_down_tot = 1-((sqrt(Ct_down)))
 CT_down= Ct_down/K_int_downstream
 delta_CQ_i_down=delta_Ct_down.*Lamda_down
 CQ_i_down = sum (delta_CQ_i_down)
 total_CQ_o_down= sum (CQ_o_down)
 cQ_down=(CQ_i_down*Nb*(K)*K_int_downstream)+(total_CQ_o_down*Nb)
 Lamda_D_tip=Lamda_D(N)
                                    %%% upstream Thrust correction%%%
 Lamda_2= (sum (Lamda_down))*(delta_r/b)
 Y_Tip_relation = ((13-(10*Y_tip))/(3*Y_tip))^2
 Ct_downt_relation= (((2/Y_tip)*Lamda_2)-Lamda_D_tip)^2
 CT_up_new(k)=(4*(Tip_Thrust_r_s^2)) * Ct_downt_relation/Y_Tip_relation
else 
v_center= 0
v_root= 0
K_int_downstream=1
for i=1:N
     r_down(i)=((delta_r*i))/b;
     seta_down(i)= seta_o_down+ r_down(i)*seta_twist;
     Lamda_down(i)=((Cl_alpha*sigma)/16)*((sqrt (1+((32*seta_down(i)*r_down(i))/(Cl_alpha*sigma))))-1);
     B_down(i) = 1-(Lamda_down(i)*sqrt(2)/1)
     delta_Ct_down(i)=((Cl_alpha*sigma)/2)*((seta_down(i)*(r_down(i)*B_down(i))^2)-(Lamda_down(i)*r_down(i)/B_down(i)))*(delta_r/R) ;
     Cl_down(i)=Cl_alpha*(seta_down(i)-(Lamda_down(i)/r_down(i)));
     c_down(i)=(C_root)+(taper_slope*r_down(i)*b)   
     V_down(i)= sqrt ((omga* (((r_down(i))*b)+R_cut))^2+(Lamda_down(i)*omga* (((r_down(i))*b)+R_cut))^2)
     Re_down(i)= (roh*V_down(i)*c_down(i))/Mioh
     Cd_0_down(i)=2/((Re_down(i)*0.75/1000)+35)
     cd_down_1_o(i)= (Lamda_down(i)/r_down(i))*pi/180
     cd_down_2_o(i) = seta_down(i)-cd_down_1_o(i)
     Cd_o_down(i) = (Cd_0_down(i)+(0.02*cd_down_2_o(i))+(0.4*(cd_down_2_o(i))^2))*(delta_r/b);
     CQ_o_down(i)=(k_br*sigma/4)*Cd_o_down(i)
     seta_o_up = seta_up(i);
 end
 total_Ct_down =(sum (delta_Ct_down))
 Ct_down=total_Ct_down*Nb
 B_down_tot = 1-((sqrt(Ct_down))/Nb)
 CT_down= Ct_down
 delta_CQ_i_down=delta_Ct_down.*Lamda_down
 CQ_i_down = sum (delta_CQ_i_down)
 total_CQ_o_down= sum (CQ_o_down)
 cQ_down=(CQ_i_down*Nb*(K)*K_int_downstream)+(total_CQ_o_down*Nb)
CT_up_new(k) = Ct_up

end

CT_up_old= CT_up_new(k)
Y_tip_old= Y_tip
Lamda_D_old = Lamda_D_tip
v_center_old = v_center
end


                                          %%%%%coaxial parameter%%%%%
 
 CT_up_new_f= CT_up_new(NN)                                         
 CT = (CT_down+ CT_up_new_f)
 cp = cQ_down+ cQ_up



 %figure (101); 
 %plot(r_up,Lamda_up,'ro')
 %plot(r_down_in,Lamda_down_in)
 %plot(r_down_out,v_c_out)
 %grid on;